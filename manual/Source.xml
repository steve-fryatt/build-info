<manual>
<title>BuildInfo</title>
<strapline>Build and Compilation Information on RISC&nbsp;OS</strapline>
<credit>&copy; Stephen Fryatt, 2005-2025</credit>
<version>Version&nbsp;<define name="version" /></version>
<date><define name="date" /></date>

<index>
<title>Contents</title>

<chapterlist/>
</index>

<!-- Licence -->

<chapter id="licence">
<title>Licence</title>

<section>
<p><cite>BuildInfo</cite> is licensed under the EUPL, Version&nbsp;1.2 only (the &ldquo;Licence&rdquo;); you may not use this work except in compliance with the Licence.</p>

<p>You may obtain a copy of the Licence at <link external="true" href="http://joinup.ec.europa.eu/software/page/eupl"/>.</p>

<p>Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an &ldquo;<strong>as is</strong>&rdquo; basis, <strong>without warranties or conditions of any kind</strong>, either express or implied.</p>

<p>See the Licence for the specific language governing permissions and limitations under the Licence.</p>

<p>The source for <cite>BuildInfo</cite> can be found on GitHub, at <link external="true" href="https://github.com/steve-fryatt/build-info"/>.</p>
</section>
</chapter>

<!-- Introduction -->

<chapter id="intro">
<title>Introduction &amp; Installation</title>

<section>
<p><cite>BuildInfo</cite> is a utility to create the date and version information (build date and build version) needed when building software. It was created for use with the Desktop Development Environment (DDE), but could be useful in other configurations as well.</p>

<p>The utility will read the current date and prompt at the command line for a version number, which can then be used in the build process (such as to be shown in an application&rsquo;s Program Information window). If no version is supplied and the Currently Selected Directory is the root of a Git repository (ie. the directory containing the <file>/Git</file> folder), then <cite>BuildInfo</cite> will use the current commit hash as the version string instead.</p>

<p>Once the details have been collected, <cite>BuildInfo</cite> can write them to a header file or store them in nominated system variables before the rest of the build process begins.</p>

<p><cite>BuildInfo</cite> is a more generalised &ndash; and polished &ndash; evolution of a <cite>CompileDate</cite> utility that I was using back in the early 2000s for building C applications natively. It aims to be broadly compatible in use with the Linux tools that I now use when cross-compiling with the GCCSDK.</p>
</section>

<section>
<title>Installation</title>

<p>To install <cite>BuildInfo</cite>, simply ensure that the <file>BuildInfo</file> program is somewhere on <variable>Run$Path</variable> &ndash; this can be achieved easily by placing it into <file>Boot:Library</file>.</p>
</section>
</chapter>

<!-- Usage -->

<chapter id="usage">
<title>Usage</title>

<section>
<p><cite>BuildInfo</cite> expects the Currently Selected Directory (CSD) to be the directory containing the project being built, in line with the standard practice for DDE build scripts to start with a <code>*Dir &lt;Obey$Dir&gt;</code> line. For example</p>

<code>Dir &lt;Obey$Dir&gt;
BuildInfo</code>

<p>It will start be reporting its own version number and build date, before prompting for the required version number for the build.</p>

<code>BuildInfo 0.00 (17 Apr 2025)
Enter version number (leave empty to use Git hash):</code>

<p>A version number can be typed in at this point, in whatever format your build process expects: it is just a text string. If the field is left blank and <key>Return</key> pressed immediately, <cite>BuildInfo</cite> will look for a <file>/Git</file> folder in the CSD and attempt to identify the commit hash associated with <name>HEAD</name>. If a hash is found, this will be used as a version &ndash; by default taking the first seven digits.</p>

<p>Once the version number has been resolved, <cite>BuildInfo</cite> will report the details and then proceed to set up the build prerequisites.</p>

<code>The version number is e9916c3
The build date is 17 Apr 2025</code>

<p>If only four characters were required from the commit hash, then passing the <command>-digits &lt;n&gt;</command> parameter when calling <cite>BuildInfo</cite> like this</p>

<code>BuildInfo -digits 4</code>

<p>would result in</p>

<code>The version number is e991
The build date is 17 Apr 2025</code>

<p>If a version number is entered, then this will be used instead of looking up a commit hash. For example</p>

<code>BuildInfo 0.00 (17 Apr 2025)
Enter version number (leave empty to use Git hash): 1.23
The version number is 1.23
The build date is 17 Apr 2025</code>

<p>The actions which are taken after this point will depend on the parameters passed to the command from the build script. Any combination of the options descibed in the following sections may be carried out.</p>
</section>

<section>
<title>System variables</title>

<p><cite>BuildInfo</cite> can set two system variables to hold the date and version as displayed on the command line. These are specified using the <command>-datevar &lt;name&gt;</command> and <command>-versionvar &lt;name&gt;</command> parameters. For example</p>

<code>BuildInfo -datevar Build$Date -versionvar Build$Version</code>

<p>would set <variable>Build$Date</variable> to contain the date (such as &ldquo;17 Apr 2025&rdquo;) and <variable>Build$Version</variable> to contain the version (such as &ldquo;e9916c3&rdquo; or &ldquo;1.23&rdquo;).</p>
</section>

<section>
<title>C Header file</title>

<p>A C header file can be written out, defining the constants <name>BUILD_INFO_DATE</name> and <name>BUILD_INFO_VERSION</name>. The name of the file, relative to the CSD, is specified using the  <command>-cheader &lt;path&gt;</command> parameter. For example, the command</p>

<code>BuildInfo -cheader h.buildinfo</code>

<p>would result in the <file>h.buildinfo</file> file being written containing</p>

<code>/* h.buildinfo
 *
 * Date of build and version for use as constants.
 * Auto-generated at build time by BuildInfo.
 */

#define BUILD_INFO_DATE &quot;17 Apr 2025&quot;
#define BUILD_INFO_VERSION &quot;e9916c3&quot;</code>
</section>
</chapter>

<!-- History -->

<chapter id="history">
<title>Version History</title>

<section>
<p>This is a complete list of all the changes made to the publicly released versions of <cite>BuildInfo</cite>.</p>
</section>

<section>
<title>1.00 (18 Apr 2025)</title>

<p>Initial public release.</p>
</section>

<section>
<title>1.01 (18 Apr 2025)</title>

<p>Update to initial public release.</p>

<ul>
<li><p>Create trimmed commit hashes from the start of the number, in line with common practice.</p></li>
</ul>
</section>
</chapter>

<!-- Contact Details -->

<section id="contact">
<title>Updates and Contacting Me</title>

<p>If you have any comments about <cite>BuildInfo</cite>, or would like to report any bugs that you find, you can email me at the address below.</p>

<p>Updates to <cite>BuildInfo</cite> and more software for RISC&nbsp;OS computers can be found on my website at <link href="http://www.stevefryatt.org.uk/risc-os"/>.</p>

<p>Stephen Fryatt<br/>
email: <link href="mailto:info@stevefryatt.org.uk" flatten="true">info@stevefryatt.org.uk</link></p>
</section>
</manual>